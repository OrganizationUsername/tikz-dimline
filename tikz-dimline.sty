%% Dimension line for LaTeX/TikZ
%% Copyright © 2013 Sébastien Gross  <seb•ɑƬ•chezwam•ɖɵʈ•org>
%%
%% This file may be distributed and/or modified
%%
%% 1. under the LaTeX Project Public License and/or
%% 2. under the WTF Public License.
%%
%%
%% This defines Tango scheme colors for LaTeX (see
%% http://tango.freedesktop.org).
%%
%% Please note that commands have been defined using letters instead of
%% numbers (ei. "Butter 1" -> butterA)
%%
%% You can use colors:
%%
%%  - directly:                      Colored \textcolor{butterA}{text} here.
%%  - by color name:                 Colored \butterA{text} here.
%%  - by color backgroung name:      Colored \BbutterA{text} here.
%%  - by beamer overlay:             Colored \butterA<2-3>{text} here.
%%  - by beamer background overlay:  Colored \BbutterA<2-3>{text} here.
%%  - by HTML code:                  Colored \textcolor{HTML}{\butter}{text} here.
%%
%% To install it copy the tango directory to either:
%%   - $TEXHOME/tex/latex/
%%   - ~/texmf/tex/latex/
%%   - ~/Library/texmf/tex/latex
%%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tikz-dimline}[2013/03/13 v1.0 initial version]

\RequirePackage{tikz}
\RequirePackage{ifthen}

\usetikzlibrary{calc,decorations.markings}

\makeatletter



\pgfkeys {
  /dimline/.cd,
  execute style/.style = {#1},
  execute macro/.style = {/dimline/execute style/.expand once=#1},
}



\newcommand{\dimline@do@nothing}[1]{#1}%

% #1: optional keys parameters
% #2: start point
% #3: end point
% #4: text
\newcommand{\dimline}[4][]{%

  \pgfplotsifinaxis{%
    \coordinate (a) at (axis cs: #2) {};
    \coordinate (b) at (axis cs: #3) {};
    \let\dimline@internal\pgfplotsextra%
  }{%
    \coordinate (a) at (#2) {};
    \coordinate (b) at (#3) {};
    %\def\dimline@internal#1{#1}%
    \let\dimline@internal\dimline@do@nothing%
  }%



  \dimline@internal{
    \pgfkeys{
      %/dimline/.cd,
      dimline/.is family,
      dimline,
      color/.initial = black,
      start line/.initial=1cm,
      start line width/.initial=0.01,
      end line/.initial=1cm,
      end line width/.initial=0.01,
      label style/.initial = {},
      #1,
      start line width/.get=\dimline@start@line@width,
      start line/.get=\dimline@start@line,
      end line/.get=\dimline@end@line,
      end line width/.get=\dimline@end@line@width,
      label style/.get = \dimline@label@style,
    }


  \begin{scope}[
    dimrecall/.style={\pgfkeysvalueof{/dimline/color}!40},
    dimline/.style={\pgfkeysvalueof{/dimline/color}},
    ]

    \coordinate (a to b) at ($(a)!\dimline@start@line!-90:(b)$);
    \coordinate (b to a) at ($(b)!\dimline@end@line!90:(a)$);

    \draw [dimrecall, line width=\dimline@start@line@width]
    (a.center) -- (a to b);
    \draw [dimrecall, line width=\dimline@end@line@width]
    (b.center) -- (b to a);

    \draw[|<->|, dimline] (a.center) -- (b.center)
    node[fill=white, align=center, sloped=true, pos=0.5,
    /dimline/execute macro = \dimline@label@style] {#4};
  \end{scope}
 }
}



\@ifclassloaded{beamer}{%
  \renewcommand<>{\dimline}[4][]{\only#5{\beameroriginal{\dimline}[#1]{#2}{#3}{#4}}}
}
\makeatother


\endinput
%% tikz-dimline.sty ends here.

